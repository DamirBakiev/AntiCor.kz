import React, { useState } from "react";

function RegistrationForm() {
  const [formData, setFormData] = useState({
      
  });


  const [errors, setErrors] = useState({});
  const [submittedData, setSubmittedData] = useState(null);

  const validate = () => {
    const newErrors = {};

    if (!/^[–ê-–Ø–∞-—èA-Za-z\s]+$/.test(formData.name)) {
      newErrors.name = "–ê—Ç—ã —Ç–µ–∫ ”ô—Ä—ñ–ø—Ç–µ—Ä–¥–µ–Ω —Ç“±—Ä—É—ã –∫–µ—Ä–µ–∫";
    }

    if (!/\S+@\S+\.\S+/.test(formData.email)) {
      newErrors.email = "–ñ–∞—Ä–∞–º–¥—ã email –µ–Ω–≥—ñ–∑—ñ“£—ñ–∑";
    }

    if (!/^\+?\d{10,15}$/.test(formData.phone)) {
      newErrors.phone = "–ñ–∞—Ä–∞–º–¥—ã —Ç–µ–ª–µ—Ñ–æ–Ω –Ω”©–º—ñ—Ä—ñ–Ω –µ–Ω–≥—ñ–∑—ñ“£—ñ–∑";
    }

    if (
      !/^(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/.test(
        formData.password
      )
    ) {
      newErrors.password =
        "–ü–∞—Ä–æ–ª—å –∫–µ–º—ñ–Ω–¥–µ 8 —Å–∏–º–≤–æ–ª, 1 “Ø–ª–∫–µ–Ω ”ô—Ä—ñ–ø, 1 —Å–∞–Ω, 1 –∞—Ä–Ω–∞–π—ã —Å–∏–º–≤–æ–ª –±–æ–ª—É –∫–µ—Ä–µ–∫";
    }

    if (formData.password !== formData.confirmPassword) {
      newErrors.confirmPassword = "“ö–∞–π—Ç–∞–ª–∞–Ω“ì–∞–Ω –ø–∞—Ä–æ–ª—å —Å”ô–π–∫–µ—Å –µ–º–µ—Å";
    }

    setErrors(newErrors);
    return Object.keys(newErrors).length === 0;
  };

  const handleChange = (e) => {
    setFormData((prev) => ({
      ...prev,
      [e.target.name]: e.target.value,
    }));
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    if (validate()) {
      setSubmittedData(formData);
    } else {
      setSubmittedData(null);
    }
  };

  return (
    <div className="container">
      <div className="form-box">
        <h2>üìù –ü–∞–π–¥–∞–ª–∞–Ω—É—à—ã —Ç—ñ—Ä–∫–µ–ª—É—ñ</h2>
        {submittedData ? (
          <div className="success-box">
            <h3>‚úÖ –°”ô—Ç—Ç—ñ —Ç—ñ—Ä–∫–µ–ª–¥—ñ“£—ñ–∑!</h3>
            <p><strong>–ê—Ç—ã:</strong> {submittedData.name}</p>
            <p><strong>Email:</strong> {submittedData.email}</p>
            <p><strong>–¢–µ–ª–µ—Ñ–æ–Ω:</strong> {submittedData.phone}</p>
          </div>
        ) : (
          <form onSubmit={handleSubmit}>
            <input
              type="text"
              name="name"
              placeholder="–ê—Ç—ã“£—ã–∑"
              value={formData.name}
              onChange={handleChange}
              className={errors.name ? "error" : ""}
            />
            {errors.name && <p className="error-text">{errors.name}</p>}

            <input
              type="email"
              name="email"
              placeholder="Email"
              value={formData.email}
              onChange={handleChange}
              className={errors.email ? "error" : ""}
            />
            {errors.email && <p className="error-text">{errors.email}</p>}

            <input
              type="text"
              name="phone"
              placeholder="–¢–µ–ª–µ—Ñ–æ–Ω"
              value={formData.phone}
              onChange={handleChange}
              className={errors.phone ? "error" : ""}
            />
            {errors.phone && <p className="error-text">{errors.phone}</p>}

            <input
              type="password"
              name="password"
              placeholder="“ö“±–ø–∏—è —Å”©–∑"
              value={formData.password}
              onChange={handleChange}
              className={errors.password ? "error" : ""}
            />
            {errors.password && (
              <p className="error-text">{errors.password}</p>
            )}

            <input
              type="password"
              name="confirmPassword"
              placeholder="“ö“±–ø–∏—è —Å”©–∑–¥—ñ “õ–∞–π—Ç–∞–ª–∞“£—ã–∑"
              value={formData.confirmPassword}
              onChange={handleChange}
              className={errors.confirmPassword ? "error" : ""}
            />
            {errors.confirmPassword && (
              <p className="error-text">{errors.confirmPassword}</p>
            )}

            <button type="submit">üöÄ –¢—ñ—Ä–∫–µ–ª—É</button>
          </form>
        )}
      </div>
    </div>
  );
}

export default RegistrationForm;
